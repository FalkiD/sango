<UserControl x:Class="ScUiCore.Views.DemoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:ScUiCore.Converters" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:routing="clr-namespace:ReactiveUI.Routing;assembly=ReactiveUI.Routing_Net45"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="1366">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/DefaultColorThemes.xaml" />
                <ResourceDictionary Source="../Resources/NumericResources.xaml" />
                <ResourceDictionary Source="../Resources/TextBlockStyle.xaml" />
                <ResourceDictionary Source="../Resources/CheckBoxStyle.xaml" />
                <ResourceDictionary Source="../Resources/ButtonStyle.xaml" />
                <ResourceDictionary Source="../Resources/ImageResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid IsSharedSizeScope="True">
        <!--Bottom Row has ItemsControl, size Auto (As much as needed) sizes for content not container(breaks ItemsControl Scrolling)-->
        <!--Bottom Row sizing must be '*' so Grid is sized for container, not content. ItemsControl will show Scrollbar-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.Background>
            <ImageBrush ImageSource="{StaticResource MainBackground}" Opacity="0.5" />
        </Grid.Background>

        <TextBlock Text="MagPipe Site Controller Demo"
				   Foreground="{StaticResource MagplaneBlueBrush}"
				   Margin="{StaticResource MarginBigControl}"
				   Style="{StaticResource LabelCenterH2}"/>

        <!--Grid.Row=1 for Buttons & status messages-->
        <Grid Grid.Row="1" Margin="{StaticResource MarginNormalControl}">
            <Grid.ColumnDefinitions>
                <!--Two rows, five columns-->
                <!--Initialize button, find trains button, Run scenario button, Stop Scenario button -->
                <!--Status display, faults display-->
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="30" SharedSizeGroup="FirstRow"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Button Content="Initialize" Command="{Binding CmdInitialize}" 
					Style="{StaticResource ButtonKeyNormal}"/>
            <Button Grid.Column="1" Content="Run Demo1" Command="{Binding CmdRunDemo1}" 
					Style="{StaticResource ButtonKeyNormal}"/>
            <Button Grid.Column="2" Content="Run Demo2" 
					Command="{Binding CmdRunDemo2}" 
					Style="{StaticResource ButtonKeyNormal}"/>
            <Button Grid.Column="3" Content="End Demo" 
					Command="{Binding CmdEndDemo}" 
					Style="{StaticResource ButtonKeyNormal}"/>

            <TextBlock Grid.Row ="1" Text="Status:" 
					   HorizontalAlignment="Right" 
					   Style="{StaticResource LabelH4}"/>
            <TextBlock Grid.Row ="1" Grid.Column="1" 
                       Grid.ColumnSpan="4"
                       Text="{Binding Status, FallbackValue={x:Static sys:String.Empty}}" 
					   HorizontalAlignment="Left" 
					   Style="{StaticResource LabelH4}"/>

            <TextBlock Grid.Row ="2" Text="Message:" 
					   HorizontalAlignment="Right" 
					   Style="{StaticResource LabelH4}"/>
            <TextBlock Grid.Row ="2" Grid.Column="1" 
                       Grid.ColumnSpan="4"
                       Text="{Binding Message, FallbackValue={x:Static sys:String.Empty}}" 
					   HorizontalAlignment="Left" 
					   Style="{StaticResource LabelH4}"/>
        </Grid>

        <!--11-Sep-2013, Grid.Row=2 for additional buttons-->
        <Grid Grid.Row="2" Margin="{StaticResource MarginNormalControl}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" SharedSizeGroup="FirstRow"/>
            </Grid.RowDefinitions>

            <Button Content="Precharge" Command="{Binding CmdPrecharge}" 
					Style="{StaticResource ButtonKeyNormal}"/>
            <Button Grid.Column="1" Content="Burp" 
					Command="{Binding CmdBurp}" 
					Style="{StaticResource ButtonKeyNormal}"/>
            <Button Grid.Column="2" Content="Disable" 
					Command="{Binding CmdDisable}" 
					Style="{StaticResource ButtonKeyNormal}"/>
            <Button Grid.Column="3" Content="Clear Faults" 
					Command="{Binding CmdClearFaults}" 
					Style="{StaticResource ButtonKeyNormal}"/>
        </Grid>

        <!--11-Sep-2013, Grid.Row=3 for Motor Count display-->
        <!--8 counts with text labels, do Label:Count in two rows of 4 MotorCountViewModels-->
        <Grid Grid.Row="3" Margin="{StaticResource MarginNormalControl}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Label Grid.ColumnSpan="4"
				   Content="Motor Counts:" 
				   Background="{StaticResource MagplaneGrayBrush}"
				   FontSize="18"
				   HorizontalAlignment="Stretch"
				   HorizontalContentAlignment="Center"/>

            <routing:ViewModelViewHost Grid.Row="1" 
									   ViewModel="{Binding EnabledVm}" 
									   HorizontalContentAlignment="Stretch"/>
            <routing:ViewModelViewHost Grid.Row="1" Grid.Column="1" 
									   ViewModel="{Binding DisabledVm}" 
									   HorizontalContentAlignment="Stretch"/>
            <routing:ViewModelViewHost Grid.Row="1" Grid.Column="2" 
									   ViewModel="{Binding FaultedVm}" 
									   HorizontalContentAlignment="Stretch"/>
            <routing:ViewModelViewHost Grid.Row="1" Grid.Column="3" 
									   ViewModel="{Binding WarningVm}" 
									   HorizontalContentAlignment="Stretch"/>

            <routing:ViewModelViewHost Grid.Row="2" 
									   ViewModel="{Binding ShutdownVm}" 
									   HorizontalContentAlignment="Stretch"/>
            <routing:ViewModelViewHost Grid.Row="2" Grid.Column="1" 
									   ViewModel="{Binding ShuttingDownVm}" 
									   HorizontalContentAlignment="Stretch"/>
            <routing:ViewModelViewHost Grid.Row="2" Grid.Column="2" 
									   ViewModel="{Binding PrechargingVm}" 
									   HorizontalContentAlignment="Stretch"/>
            <routing:ViewModelViewHost Grid.Row="2" Grid.Column="3" 
									   ViewModel="{Binding PrechargedVm}" 
									   HorizontalContentAlignment="Stretch"/>
        </Grid>

        <!--Horizontal ItemsControl for 10-track view-->
        <ItemsControl Grid.Row="4" Margin="{StaticResource MarginNormalControl}"
                      Visibility="{Binding ShowTenTrackDisplay, FallbackValue=Collapsed,
                                            Converter={StaticResource BooleanToVisibilityConverter}}"
                      HorizontalAlignment="Center"
                      VirtualizingStackPanel.IsVirtualizing="True"
					  ScrollViewer.CanContentScroll="True"
					  ScrollViewer.HorizontalScrollBarVisibility="Auto"
					  ScrollViewer.VerticalScrollBarVisibility="Hidden"
					  ScrollViewer.PanningMode="HorizontalOnly"
                      ItemsSource="{Binding TenTrackDisplay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Template>
                <ControlTemplate>
                    <ScrollViewer Focusable="True"
								ManipulationBoundaryFeedback="ScrollViewerItems_OnManipulationBoundaryFeedback">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <routing:ViewModelViewHost ViewModel="{Binding}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!--Grid.Row=5 above ItemsControl to show titles of each 'column' of data-->
        <Grid Grid.Row="5" Background="{StaticResource MagplaneGrayBrush}" 
			  Margin="{StaticResource MarginNormalControl}"
			  Visibility="{Binding ShowHeaderLine, FallbackValue=Collapsed,
							Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="Track ID" Style="{StaticResource LabelCenterH4}" />
            <TextBlock Grid.Column="1" Text="Has Train" Style="{StaticResource LabelCenterH4}"/>
            <TextBlock Grid.Column="2" Text="Length" Style="{StaticResource LabelCenterH4}"/>
            <TextBlock Grid.Column="3" Text="WindingLen" ToolTip="Winding Length" Style="{StaticResource LabelCenterH4}"/>
            <TextBlock Grid.Column="4" Text="Offset" ToolTip ="Winding Offset" Style="{StaticResource LabelCenterH4}"/>
        </Grid>

        <!--ItemsControl (Grid.Row=5) bound to TrackModules collection of TrackModuleViewModels-->
        <!--Note:ItemsControl will not show scrollbar unless it is in a container that limits its size-->
        <ItemsControl Grid.Row="6" ItemsSource="{Binding TrackModules}"
					VirtualizingStackPanel.IsVirtualizing="True"
					ScrollViewer.CanContentScroll="True"
					ScrollViewer.HorizontalScrollBarVisibility="Hidden"
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					ScrollViewer.PanningMode="VerticalOnly">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Template>
                <ControlTemplate>
                    <ScrollViewer Focusable="True"
								ManipulationBoundaryFeedback="ScrollViewerItems_OnManipulationBoundaryFeedback">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <routing:ViewModelViewHost ViewModel="{Binding}"
											   HorizontalContentAlignment="Stretch"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
